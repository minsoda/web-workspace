<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<!-- namespace : 해당 mapper 파일의 고유한 별칭 -->
	
	<!--
		* DML문일 경우
		<insert|update|delete id="식별자" parameterType="전달받을 자바타입(풀 클래스명)|별칭">
		</insert|update|delete>
		
		* SELECT문일 경우
		<select id="식별자" [parameterType="전달받을 자바타입(풀클래스명)|별칭"]
					resultType="조회결과를 반환하고자 하는 자바타입 | resultMap="조회결과를 뽑아서 매핑할 resultMap의 id">
		</select>
	
		? 대신에 해당 sql문에 전달된 객체로부터 값을 꺼낼 때 #{필드명 또는 변수명 또는 키값} 이용
		
	 -->
	 <!-- Member: 앞써 config에 membervo 별칭을 Member로 해놔서 사용가능! membervo 변수 입력-->
	<insert id="registerMember" parameterType="Member">
		INSERT INTO member(id, password, name, address)
		VALUES(#{id}, #{password}, #{name}, #{address})
	</insert>
	
	<!-- * 인식못해서 전부 작성해줘야함 -->
	<select id="showAllMember" resultType="Member">
		SELECT id, password, name, address FROM member
	</select>
	
	<!-- * 인식 가능 -->
	<select id="findByIdMember" parameterType="String" resultType="Member">
		SELECT id, password, name, address FROM member WHERE id=#{id}
	</select>
	
	<!-- id,password memeber로 담을수있으니까! -->
	<select id="login" parameterType="Member" resultType="Member">
		SELECT id, password, name, address
		FROM member
		WHERE id=#{id} AND password=#{password}
	</select>
	
	<update id="updateMember" parameterType="Member">
		UPDATE member SET id=#{id}, password=#{password}, name=#{name}, address=#{address} WHERE ID = #{id}
	</update>
	
</mapper>